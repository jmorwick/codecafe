<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="whatHourIsIt" class="net.sourcedestination.codecafe.structure.exercises.MethodlikeExpressionExercise">
    <constructor-arg name="exerciseId" value="whatHourIsIt"/>
    <constructor-arg name="timeout" value="1000"/>
    <constructor-arg name="parameters">
        <map>
            <entry key="time" value="#{1L}"/>
        </map>
    </constructor-arg>
    <constructor-arg name="targetType" value="long"/>
    <constructor-arg name="description">
        <bean id="outside-map" class="net.sourcedestination.codecafe.structure.exercises.ExerciseDefinition" factory-method="loadTextFile">
            <constructor-arg value="exercise-descriptions/whatHourIsIt.html"/>
        </bean>
    </constructor-arg>
            <constructor-arg name="visibleTests">
                <list>
                    <bean class="net.sourcedestination.funcles.tuple.Pair">
                        <constructor-arg value="1565984600627L" />
                        <constructor-arg value="2"/>
                    </bean>
                    <bean class="net.sourcedestination.funcles.tuple.Pair">
                        <constructor-arg value="1566948600000L" />
                        <constructor-arg value="6"/>
                    </bean>
                    <bean class="net.sourcedestination.funcles.tuple.Pair">
                        <constructor-arg value="1566834600000L" />
                        <constructor-arg value="10"/>
                    </bean>
                </list>
            </constructor-arg>
            <constructor-arg name="hiddenTests">
                <list>
                    <bean class="net.sourcedestination.funcles.tuple.Pair">
                        <constructor-arg value="1566834600000L" />
                        <constructor-arg value="10"/>
                    </bean>
                    <bean class="net.sourcedestination.funcles.tuple.Pair">
                        <constructor-arg value="0L" />
                        <constructor-arg value="7"/>
                    </bean>
                </list>
            </constructor-arg>
    </bean>

    <bean id="gaussianPDFExpression" class="net.sourcedestination.codecafe.structure.exercises.MethodlikeExpressionExercise">
        <constructor-arg name="exerciseId" value="gaussianPDFExpression"/>
        <constructor-arg name="timeout" value="1000"/>
        <constructor-arg name="parameters">
            <map>
                <entry key="Âµ" value="#{1.0}"/>
                <entry key="Ïƒ" value="#{2.0}"/>
                <entry key="x" value="#{3.0}"/>
            </map>
        </constructor-arg>
        <constructor-arg name="targetType" value="double"/>
        <constructor-arg name="description">
            <bean id="outside-map" class="net.sourcedestination.codecafe.structure.exercises.ExerciseDefinition" factory-method="loadTextFile">
                <constructor-arg value="exercise-descriptions/gaussianPDFExpression.html"/>
            </bean>
        </constructor-arg>
        <constructor-arg name="visibleTests">
            <list>
                <bean class="net.sourcedestination.funcles.tuple.Pair">
                    <constructor-arg><value>1.0,2.0,3.0</value></constructor-arg>
                    <constructor-arg><value>0.120985</value></constructor-arg>
                </bean>
                <bean class="net.sourcedestination.funcles.tuple.Pair">
                    <constructor-arg><value>3,2,4</value></constructor-arg>
                    <constructor-arg><value>0.1760326</value></constructor-arg>
                </bean>
                <bean class="net.sourcedestination.funcles.tuple.Pair">
                    <constructor-arg><value>3,6,1</value></constructor-arg>
                    <constructor-arg><value>0.06289720</value></constructor-arg>
                </bean>
            </list>
        </constructor-arg>
        <constructor-arg name="hiddenTests">
            <list>
                <bean class="net.sourcedestination.funcles.tuple.Pair">
                    <constructor-arg><value>9,6,4</value></constructor-arg>
                    <constructor-arg><value>0.04698531</value></constructor-arg>
                </bean>
                <bean class="net.sourcedestination.funcles.tuple.Pair">
                    <constructor-arg><value>1,2,5</value></constructor-arg>
                    <constructor-arg><value>0.0269954832</value></constructor-arg>
                </bean>
            </list>
        </constructor-arg>
    </bean>

    <bean id="gaussianPDFMethod" class="net.sourcedestination.codecafe.structure.exercises.SimpleMethodExercise">
        <constructor-arg name="exerciseId" value="gaussianPDFMethod"/>
        <constructor-arg name="methodName" value="gaussianPdf"/>
        <constructor-arg name="timeout" value="1000"/>
        <constructor-arg name="signature" value="(double,double,double)double"/>
        <constructor-arg name="description">
            <bean id="outside-map" class="net.sourcedestination.codecafe.structure.exercises.ExerciseDefinition" factory-method="loadTextFile">
                <constructor-arg value="exercise-descriptions/gaussianPDFMethod.html"/>
            </bean>
        </constructor-arg>
        <constructor-arg name="visibleTests">
            <list>
                <bean class="net.sourcedestination.funcles.tuple.Pair">
                    <constructor-arg><value>1.0,2.0,3.0</value></constructor-arg>
                    <constructor-arg><value>0.120985</value></constructor-arg>
                </bean>
                <bean class="net.sourcedestination.funcles.tuple.Pair">
                    <constructor-arg><value>3,2,4</value></constructor-arg>
                    <constructor-arg><value>0.1760326</value></constructor-arg>
                </bean>
                <bean class="net.sourcedestination.funcles.tuple.Pair">
                    <constructor-arg><value>3,6,1</value></constructor-arg>
                    <constructor-arg><value>0.06289720</value></constructor-arg>
                </bean>
            </list>
        </constructor-arg>
        <constructor-arg name="hiddenTests">
            <list>
                <bean class="net.sourcedestination.funcles.tuple.Pair">
                    <constructor-arg><value>9,6,4</value></constructor-arg>
                    <constructor-arg><value>0.04698531</value></constructor-arg>
                </bean>
                <bean class="net.sourcedestination.funcles.tuple.Pair">
                    <constructor-arg><value>1,2,5</value></constructor-arg>
                    <constructor-arg><value>0.0269954832</value></constructor-arg>
                </bean>
            </list>
        </constructor-arg>
    </bean>

    <bean id="addTwoNumbers" class="net.sourcedestination.codecafe.structure.exercises.SimpleMethodExercise">
        <constructor-arg name="exerciseId" value="addTwoNumbers"/>
        <constructor-arg name="methodName" value="addTwoNumbers"/>
        <constructor-arg name="timeout" value="1000"/>
        <constructor-arg name="signature" value="(int,int)int"/>
        <constructor-arg name="description">
           <value>Write a method with two integer parameters that simply returns their sum (as an integer). </value>
        </constructor-arg>
        <constructor-arg name="visibleTests">
            <list>
                <bean class="net.sourcedestination.funcles.tuple.Pair">
                    <constructor-arg><value>1,1</value></constructor-arg>
                    <constructor-arg><value>2</value></constructor-arg>
                </bean>
                <bean class="net.sourcedestination.funcles.tuple.Pair">
                    <constructor-arg><value>1,-1</value></constructor-arg>
                    <constructor-arg><value>0</value></constructor-arg>
                </bean>
                <bean class="net.sourcedestination.funcles.tuple.Pair">
                    <constructor-arg><value>41,90</value></constructor-arg>
                    <constructor-arg><value>131</value></constructor-arg>
                </bean>
                <bean class="net.sourcedestination.funcles.tuple.Pair">
                    <constructor-arg><value>0,432</value></constructor-arg>
                    <constructor-arg><value>432</value></constructor-arg>
                </bean>
            </list>
        </constructor-arg>
        <constructor-arg name="hiddenTests">
            <list>
                <bean class="net.sourcedestination.funcles.tuple.Pair">
                    <constructor-arg><value>-5,-9</value></constructor-arg>
                    <constructor-arg><value>-14</value></constructor-arg>
                </bean>
                <bean class="net.sourcedestination.funcles.tuple.Pair">
                    <constructor-arg><value>0,0</value></constructor-arg>
                    <constructor-arg><value>0</value></constructor-arg>
                </bean>
                <bean class="net.sourcedestination.funcles.tuple.Pair">
                    <constructor-arg><value>51,-51</value></constructor-arg>
                    <constructor-arg><value>0</value></constructor-arg>
                </bean>
                <bean class="net.sourcedestination.funcles.tuple.Pair">
                    <constructor-arg><value>124,-200</value></constructor-arg>
                    <constructor-arg><value>-76</value></constructor-arg>
                </bean>
            </list>
        </constructor-arg>
    </bean>

    <bean id="firstName" class="net.sourcedestination.codecafe.structure.exercises.SimpleMethodExercise">
        <constructor-arg name="exerciseId" value="firstName"/>
        <constructor-arg name="methodName" value="firstName"/>
        <constructor-arg name="timeout" value="1000"/>
        <constructor-arg name="signature" value="(String)String"/>
        <constructor-arg name="description">
            <value>Given a string containing a full name (first name, then a space, then the last name), return only the first name. </value>
        </constructor-arg>
        <constructor-arg name="visibleTests">
            <list>
                <bean class="net.sourcedestination.funcles.tuple.Pair">
                    <constructor-arg><value>"Joseph Kendall-Morwick"</value></constructor-arg>
                    <constructor-arg><value>"Joseph"</value></constructor-arg>
                </bean>
                <bean class="net.sourcedestination.funcles.tuple.Pair">
                    <constructor-arg><value>"Ryne Sandberg"</value></constructor-arg>
                    <constructor-arg><value>"Ryne"</value></constructor-arg>
                </bean>
                <bean class="net.sourcedestination.funcles.tuple.Pair">
                    <constructor-arg><value>"Ada Lovelace"</value></constructor-arg>
                    <constructor-arg><value>"Ada"</value></constructor-arg>
                </bean>
            </list>
        </constructor-arg>
        <constructor-arg name="hiddenTests">
            <list>
                <bean class="net.sourcedestination.funcles.tuple.Pair">
                    <constructor-arg><value>"Carol Danvers"</value></constructor-arg>
                    <constructor-arg><value>"Carol"</value></constructor-arg>
                </bean>
                <bean class="net.sourcedestination.funcles.tuple.Pair">
                    <constructor-arg><value>"Tony Stark"</value></constructor-arg>
                    <constructor-arg><value>"Tony"</value></constructor-arg>
                </bean>
            </list>
        </constructor-arg>
    </bean>

    <bean id="bothEnds" class="net.sourcedestination.codecafe.structure.exercises.SimpleMethodExercise">
        <constructor-arg name="exerciseId" value="bothEnds"/>
        <constructor-arg name="methodName" value="bothEnds"/>
        <constructor-arg name="timeout" value="1000"/>
        <constructor-arg name="signature" value="(String)String"/>
        <constructor-arg name="description">
            <value>Given a string containing at least two characters, return a new string consisting of the first and
            last characers in the original string (in that order). </value>
        </constructor-arg>
        <constructor-arg name="visibleTests">
            <list>
                <bean class="net.sourcedestination.funcles.tuple.Pair">
                    <constructor-arg><value>"Java"</value></constructor-arg>
                    <constructor-arg><value>"Ja"</value></constructor-arg>
                </bean>
                <bean class="net.sourcedestination.funcles.tuple.Pair">
                    <constructor-arg><value>"Missouri Western"</value></constructor-arg>
                    <constructor-arg><value>"Mn"</value></constructor-arg>
                </bean>
                <bean class="net.sourcedestination.funcles.tuple.Pair">
                    <constructor-arg><value>"Hi"</value></constructor-arg>
                    <constructor-arg><value>"Hi"</value></constructor-arg>
                </bean>
            </list>
        </constructor-arg>
        <constructor-arg name="hiddenTests">
            <list>
                <bean class="net.sourcedestination.funcles.tuple.Pair">
                    <constructor-arg><value>"Carol Danvers"</value></constructor-arg>
                    <constructor-arg><value>"Cs"</value></constructor-arg>
                </bean>
                <bean class="net.sourcedestination.funcles.tuple.Pair">
                    <constructor-arg><value>"Tony Stark"</value></constructor-arg>
                    <constructor-arg><value>"Tk"</value></constructor-arg>
                </bean>
                <bean class="net.sourcedestination.funcles.tuple.Pair">
                    <constructor-arg><value>"aba"</value></constructor-arg>
                    <constructor-arg><value>"aa"</value></constructor-arg>
                </bean>
            </list>
        </constructor-arg>
    </bean>

    <bean id="initials" class="net.sourcedestination.codecafe.structure.exercises.SimpleMethodExercise">
        <constructor-arg name="exerciseId" value="initials"/>
        <constructor-arg name="methodName" value="initials"/>
        <constructor-arg name="timeout" value="1000"/>
        <constructor-arg name="signature" value="(String)String"/>
        <constructor-arg name="description">
            <value>Given a string containing a three-part full name where each part of the name is separated by spaces,
                return a new string consisting of the initials for that person's name, all in upper-case, with a period
                following each initial. </value>
        </constructor-arg>
        <constructor-arg name="visibleTests">
            <list>
                <bean class="net.sourcedestination.funcles.tuple.Pair">
                    <constructor-arg><value>"Philip Seymour Hoffman"</value></constructor-arg>
                    <constructor-arg><value>"P.S.H."</value></constructor-arg>
                </bean>
                <bean class="net.sourcedestination.funcles.tuple.Pair">
                    <constructor-arg><value>"Jaime Lee Curtis"</value></constructor-arg>
                    <constructor-arg><value>"J.L.C."</value></constructor-arg>
                </bean>
                <bean class="net.sourcedestination.funcles.tuple.Pair">
                    <constructor-arg><value>"Daniel dae Kim"</value></constructor-arg>
                    <constructor-arg><value>"D.D.K."</value></constructor-arg>
                </bean>
            </list>
        </constructor-arg>
        <constructor-arg name="hiddenTests">
            <list>
                <bean class="net.sourcedestination.funcles.tuple.Pair">
                    <constructor-arg><value>"Dark Wing Duck"</value></constructor-arg>
                    <constructor-arg><value>"D.W.D."</value></constructor-arg>
                </bean>
                <bean class="net.sourcedestination.funcles.tuple.Pair">
                    <constructor-arg><value>"Tommy Lee Jones"</value></constructor-arg>
                    <constructor-arg><value>"T.L.J."</value></constructor-arg>
                </bean>
                <bean class="net.sourcedestination.funcles.tuple.Pair">
                    <constructor-arg><value>"a b c"</value></constructor-arg>
                    <constructor-arg><value>"A.B.C."</value></constructor-arg>
                </bean>
            </list>
        </constructor-arg>
    </bean>

    <!-- incorporate https://codingbat.com/prob/p208150 /-->
    <!-- incorporate https://codingbat.com/prob/p258263 /-->
    <!-- incorporate https://codingbat.com/prob/p257654 /-->
    <!-- incorporate https://codingbat.com/prob/p265699 /-->
    <!-- incorporate https://codingbat.com/prob/p292218 /-->
    <!-- incorporate https://codingbat.com/prob/p246309 /-->
    <!-- incorporate https://codingbat.com/prob/p272214 /-->
    <!-- incorporate https://codingbat.com/prob/p244189 /-->
    <!-- incorporate https://codingbat.com/prob/p227543 /-->
    <!-- incorporate https://codingbat.com/prob/p286501 /-->
    <!-- incorporate https://codingbat.com/prob/p203598 /-->

    <!-- replace https://codingbat.com/prob/p184004 /-->
    <!-- replace https://codingbat.com/prob/p182873 /-->
    <!-- replace https://codingbat.com/prob/p113261 /-->
    <!-- replace https://codingbat.com/prob/p170829 /-->
    <!-- replace https://codingbat.com/prob/p142455 /-->
    <!-- replace https://codingbat.com/prob/p155713 /-->
    <!-- replace https://codingbat.com/prob/p136254 /-->
    <!-- replace https://codingbat.com/prob/p191878 /-->

    <!-- develop exercises for templates /-->

</beans>
